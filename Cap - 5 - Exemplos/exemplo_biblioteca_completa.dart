void main() {
  // Sistema completo usando todas as estruturas
  
  // Lista de livros dispon√≠veis
  List<Map<String, dynamic>> acervo = [
    {
      'id': 1,
      'titulo': 'Dart: Guia Completo',
      'autor': 'Jo√£o Silva',
      'ano': 2023,
      'disponivel': true,
      'categoria': 'programacao'
    },
    {
      'id': 2,
      'titulo': 'Flutter na Pr√°tica',
      'autor': 'Maria Santos',
      'ano': 2024,
      'disponivel': false,
      'categoria': 'programacao'
    },
    {
      'id': 3,
      'titulo': 'Hist√≥ria do Brasil',
      'autor': 'Carlos Pereira',
      'ano': 2022,
      'disponivel': true,
      'categoria': 'historia'
    }
  ];
  
  // Set de categorias √∫nicas
  Set<String> categorias = {};
  
  // Map de usu√°rios emprestados
  Map<int, String> emprestimos = {
    2: 'Ana Costa' // Livro ID 2 emprestado para Ana
  };
  
  // Extraindo categorias do acervo
  for (Map<String, dynamic> livro in acervo) {
    categorias.add(livro['categoria'] as String);
  }
  
  print('=== SISTEMA DE BIBLIOTECA ===\n');
  
  // 1. Relat√≥rio geral
  print('üìö RELAT√ìRIO GERAL');
  print('Total de livros: ${acervo.length}');
  print('Categorias dispon√≠veis: $categorias');
  print('Livros emprestados: ${emprestimos.length}\n');
  
  // 2. Lista completa do acervo
  print('üìñ ACERVO COMPLETO');
  for (int i = 0; i < acervo.length; i++) {
    Map<String, dynamic> livro = acervo[i];
    String status = livro['disponivel'] ? '‚úÖ Dispon√≠vel' : '‚ùå Emprestado';
    String emprestadoPara = emprestimos.containsKey(livro['id']) 
        ? ' (para: ${emprestimos[livro['id']]})' 
        : '';
    
    print('${i + 1}. "${livro['titulo']}" - ${livro['autor']} (${livro['ano']})');
    print('   Categoria: ${livro['categoria']} | $status$emprestadoPara');
  }
  print('');
  
  // 3. Busca por categoria
  String categoriaBusca = 'programacao';
  print('üîç LIVROS DE ${categoriaBusca.toUpperCase()}');
  
  List<Map<String, dynamic>> livrosProgramacao = acervo.where((livro) {
    return livro['categoria'] == categoriaBusca;
  }).toList();
  
  for (Map<String, dynamic> livro in livrosProgramacao) {
    String disponibilidade = livro['disponivel'] ? 'Dispon√≠vel' : 'Emprestado';
    print('- "${livro['titulo']}" ($disponibilidade)');
  }
  print('');
  
  // 4. Livros dispon√≠veis para empr√©stimo
  print('‚úÖ LIVROS DISPON√çVEIS');
  List<Map<String, dynamic>> disponiveis = acervo.where((livro) {
    return livro['disponivel'] == true;
  }).toList();
  
  for (Map<String, dynamic> livro in disponiveis) {
    print('- ID ${livro['id']}: "${livro['titulo']}" - ${livro['autor']}');
  }
  print('');
  
  // 5. Simulando novo empr√©stimo
  print('üìã SIMULANDO EMPR√âSTIMO');
  int livroId = 1;
  String nomeUsuario = 'Pedro Lima';
  
  // Encontrando o livro
  Map<String, dynamic>? livroEscolhido;
  for (Map<String, dynamic> livro in acervo) {
    if (livro['id'] == livroId) {
      livroEscolhido = livro;
      break;
    }
  }
  
  if (livroEscolhido != null && livroEscolhido['disponivel']) {
    // Realizando empr√©stimo
    livroEscolhido['disponivel'] = false;
    emprestimos[livroId] = nomeUsuario;
    
    print('‚úÖ Empr√©stimo realizado!');
    print('Livro: "${livroEscolhido['titulo']}"');
    print('Usu√°rio: $nomeUsuario');
  } else {
    print('‚ùå Livro n√£o dispon√≠vel para empr√©stimo');
  }
  print('');
  
  // 6. Relat√≥rio final
  print('üìä RELAT√ìRIO FINAL');
  int totalDisponiveis = acervo.where((livro) => livro['disponivel']).length;
  int totalEmprestados = acervo.length - totalDisponiveis;
  
  print('Livros dispon√≠veis: $totalDisponiveis');
  print('Livros emprestados: $totalEmprestados');
  
  // 7. Lista de usu√°rios com empr√©stimos
  if (emprestimos.isNotEmpty) {
    print('\nüë• USU√ÅRIOS COM EMPR√âSTIMOS:');
    emprestimos.forEach((livroId, usuario) {
      // Encontrando t√≠tulo do livro
      String titulo = 'Livro n√£o encontrado';
      for (Map<String, dynamic> livro in acervo) {
        if (livro['id'] == livroId) {
          titulo = livro['titulo'] as String;
          break;
        }
      }
      print('- $usuario: "$titulo"');
    });
  }
  
  // 8. Estat√≠sticas por categoria
  print('\nüìà ESTAT√çSTICAS POR CATEGORIA:');
  Map<String, int> estatisticas = {};
  
  for (String categoria in categorias) {
    int quantidade = acervo.where((livro) => livro['categoria'] == categoria).length;
    estatisticas[categoria] = quantidade;
  }
  
  estatisticas.forEach((categoria, quantidade) {
    double percentual = (quantidade / acervo.length) * 100;
    print('$categoria: $quantidade livros (${percentual.toStringAsFixed(1)}%)');
  });
}
